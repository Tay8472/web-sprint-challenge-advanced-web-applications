{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TPM01\\\\LambdaSchool\\\\unit3\\\\web-sprint-challenge-advanced-web-applications\\\\client\\\\src\\\\components\\\\ColorList.js\";\nimport React, { useState } from \"react\";\nimport Auth from \"../Auth\";\nimport Input from \"../Input\";\nconst initialColor = {\n  color: \"\",\n  code: {\n    hex: \"\"\n  }\n};\n\nconst ColorList = ({\n  colors,\n  updateColors\n}) => {\n  console.log(colors);\n  const [editing, setEditing] = useState(false);\n  const [colorToEdit, setColorToEdit] = useState(initialColor);\n  const [colorToCreate, setColorToCreate, handleColorToCreate] = Input(\"\");\n  const [hexCode, setHexCode, handleHexCode] = Input(\"\");\n\n  const editColor = color => {\n    setEditing(true);\n    setColorToEdit(color);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = {\n      color: colorToCreate,\n      code: {\n        hex: hexCode\n      }\n    };\n    Auth().post(\"/api/colors\", data).then(res => {\n      console.log(res);\n      updateColors(res.data);\n    }).catch(err => {\n      HTMLFormControlsCollection.log(err);\n    });\n  };\n\n  const saveEdit = e => {\n    e.preventDefault(); // Make a put request to save your updated color\n    // think about where will you get the id from...\n    // where is is saved right now?\n\n    const color = colors.find(color => {\n      return color.color === colorToEdit.color;\n    });\n    Auth().put(`/api/colors/${color.id}`, colorToEdit).then(res => {\n      console.log(res);\n      window.location.reload();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const deleteColor = color => {\n    // make a delete request to delete this color\n    Auth().delete(`/api/colors/${color.id}`).then(res => {\n      console.log(res);\n      window.location.reload();\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"colors-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"colors\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, colors.map(color => React.createElement(\"li\", {\n    key: color.color,\n    onClick: () => editColor(color),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"delete\",\n    onClick: e => {\n      e.stopPropagation();\n      deleteColor(color);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"x\"), \" \", color.color), React.createElement(\"div\", {\n    className: \"color-box\",\n    style: {\n      backgroundColor: color.code.hex\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })))), editing && React.createElement(\"form\", {\n    onSubmit: saveEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"edit color\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"color name:\", React.createElement(\"input\", {\n    onChange: e => setColorToEdit({ ...colorToEdit,\n      color: e.target.value\n    }),\n    value: colorToEdit.color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"hex code:\", React.createElement(\"input\", {\n    onChange: e => setColorToEdit({ ...colorToEdit,\n      code: {\n        hex: e.target.value\n      }\n    }),\n    value: colorToEdit.code.hex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"button-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"save\"), React.createElement(\"button\", {\n    onClick: () => setEditing(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"cancel\"))), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"add color\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"color name\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"color name\",\n    value: colorToCreate,\n    onChange: e => handleColorToCreate(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"hex code\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"hex code\",\n    value: hexCode,\n    onChange: e => handleHexCode(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"add\")), React.createElement(\"div\", {\n    className: \"spacer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }));\n};\n\nexport default ColorList;","map":{"version":3,"sources":["C:/Users/TPM01/LambdaSchool/unit3/web-sprint-challenge-advanced-web-applications/client/src/components/ColorList.js"],"names":["React","useState","Auth","Input","initialColor","color","code","hex","ColorList","colors","updateColors","console","log","editing","setEditing","colorToEdit","setColorToEdit","colorToCreate","setColorToCreate","handleColorToCreate","hexCode","setHexCode","handleHexCode","editColor","handleSubmit","e","preventDefault","data","post","then","res","catch","err","HTMLFormControlsCollection","saveEdit","find","put","id","window","location","reload","deleteColor","delete","map","stopPropagation","backgroundColor","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Auth from \"../Auth\";\r\nimport Input from \"../Input\";\r\n\r\nconst initialColor = {\r\n  color: \"\",\r\n  code: { hex: \"\" },\r\n};\r\n\r\nconst ColorList = ({ colors, updateColors }) => {\r\n  console.log(colors);\r\n  const [editing, setEditing] = useState(false);\r\n  const [colorToEdit, setColorToEdit] = useState(initialColor);\r\n  const [colorToCreate, setColorToCreate, handleColorToCreate] = Input(\"\");\r\n  const [hexCode, setHexCode, handleHexCode] = Input(\"\");\r\n\r\n  const editColor = (color) => {\r\n    setEditing(true);\r\n    setColorToEdit(color);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      color: colorToCreate,\r\n      code: { hex: hexCode },\r\n    };\r\n\r\n    Auth()\r\n      .post(\"/api/colors\", data)\r\n      .then((res) => {\r\n        console.log(res);\r\n        updateColors(res.data);\r\n      })\r\n      .catch((err) => {\r\n        HTMLFormControlsCollection.log(err);\r\n      });\r\n  };\r\n\r\n  const saveEdit = (e) => {\r\n    e.preventDefault();\r\n    // Make a put request to save your updated color\r\n    // think about where will you get the id from...\r\n    // where is is saved right now?\r\n    const color = colors.find((color) => {\r\n      return color.color === colorToEdit.color;\r\n    });\r\n\r\n    Auth()\r\n      .put(`/api/colors/${color.id}`, colorToEdit)\r\n      .then((res) => {\r\n        console.log(res);\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const deleteColor = (color) => {\r\n    // make a delete request to delete this color\r\n    Auth()\r\n      .delete(`/api/colors/${color.id}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        window.location.reload();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"colors-wrap\">\r\n      <p>colors</p>\r\n      <ul>\r\n        {colors.map((color) => (\r\n          <li key={color.color} onClick={() => editColor(color)}>\r\n            <span>\r\n              <span\r\n                className=\"delete\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  deleteColor(color);\r\n                }}\r\n              >\r\n                x\r\n              </span>{\" \"}\r\n              {color.color}\r\n            </span>\r\n            <div\r\n              className=\"color-box\"\r\n              style={{ backgroundColor: color.code.hex }}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {editing && (\r\n        <form onSubmit={saveEdit}>\r\n          <legend>edit color</legend>\r\n          <label>\r\n            color name:\r\n            <input\r\n              onChange={(e) =>\r\n                setColorToEdit({ ...colorToEdit, color: e.target.value })\r\n              }\r\n              value={colorToEdit.color}\r\n            />\r\n          </label>\r\n          <label>\r\n            hex code:\r\n            <input\r\n              onChange={(e) =>\r\n                setColorToEdit({\r\n                  ...colorToEdit,\r\n                  code: { hex: e.target.value },\r\n                })\r\n              }\r\n              value={colorToEdit.code.hex}\r\n            />\r\n          </label>\r\n          <div className=\"button-row\">\r\n            <button type=\"submit\">save</button>\r\n            <button onClick={() => setEditing(false)}>cancel</button>\r\n          </div>\r\n        </form>\r\n      )}\r\n      <form onSubmit={handleSubmit}>\r\n        <legend>add color</legend>\r\n        <label>color name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"color name\"\r\n          value={colorToCreate}\r\n          onChange={(e) => handleColorToCreate(e.target.value)}\r\n        ></input>\r\n        <label>hex code</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"hex code\"\r\n          value={hexCode}\r\n          onChange={(e) => handleHexCode(e.target.value)}\r\n        ></input>\r\n        <button type=\"submit\">add</button>\r\n      </form>\r\n\r\n      <div className=\"spacer\" />\r\n      {/* stretch - build another form here to add a color */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorList;\r\n"]},"metadata":{},"sourceType":"module"}